{"version":3,"sources":["components/CardEmployees/CardLi.js","components/CardEmployees/Card.js","utils/varibles.js","components/CardEmployees/CardList.js","components/CheckedCardEmployees/ChecedCardLi.js","components/CheckedCardEmployees/CheckedCard.js","components/CheckedCardEmployees/CheckedCardList.js","App.js","reportWebVitals.js","index.js"],"names":["CardLi","person","lastName","firstName","useState","isChecked","setChecked","isChangeChecked","setChangeChecked","dispatch","useDispatch","checkedEmployees","useSelector","store","useEffect","checkedEmployeesLocalStorage","type","payload","localStorage","localStotegeArr","JSON","parse","stringify","indexCurrent","forEach","element","index","id","indexIdInLocalStorage","checkedEmployeesNew","splice","localStorageArr","find","setItem","className","onChange","checked","Card","letter","filterDataLetters","item","filter","card","split","toLowerCase","sort","a","b","itemsNameEmploeers","map","toUpperCase","length","monthArrInJS","arrWord","monthArr","CardList","employees","allEmployees","arrCards","fetch","then","res","json","data","ChecedCardLi","dob","dateBd","month","Date","getMonth","date","getDate","year","getFullYear","el","CheckedCard","itemsNameEmployees","currentMonth","CheckedCardList","employeesChecked","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SAVE_ALL_EMPLOYEES","SAVE_CHECKED_EMPLOYEES","initialState","createStore","currentState","action","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e9bee77.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst CardLi = ({ person }) => {\n\tconst { lastName, firstName } = person\n\tconst [isChecked, setChecked] = useState(false)\n\tconst [isChangeChecked, setChangeChecked] = useState(false)\n\tconst dispatch = useDispatch()\n\tconst checkedEmployees = useSelector((store) => store.checkedEmployees)\n\n\tconst handelClickOnCheckbox = () => {\n\t\tsetChecked(!isChecked)\n\t\tsetChangeChecked(!isChangeChecked)\n\t}\n\n\tuseEffect(() => {\n\t\tif (isChecked) {\n\t\t\tlet checkedEmployeesLocalStorage = []\n\n\t\t\tdispatch({\n\t\t\t\ttype: 'SAVE_CHECKED_EMPLOYEES',\n\t\t\t\tpayload: [...checkedEmployees, person],\n\t\t\t})\n\n\t\t\tif (localStorage['checkedEmployees']) {\n\t\t\t\tconst localStotegeArr = JSON.parse(localStorage['checkedEmployees'])\n\t\t\t\tcheckedEmployeesLocalStorage = [...localStotegeArr, person]\n\t\t\t\tlocalStorage['checkedEmployees'] = JSON.stringify(\n\t\t\t\t\tcheckedEmployeesLocalStorage\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn\n\t\t} else {\n\t\t\tlet checkedEmployeesLocalStorage = []\n\t\t\tlet indexCurrent\n\t\t\t;[...checkedEmployees].forEach((element, index) => {\n\t\t\t\tif (element.id === person.id) indexCurrent = index\n\t\t\t})\n\n\t\t\tif (indexCurrent >= 0) {\n\t\t\t\tconst checkedEmployeesNew = [...checkedEmployees]\n\t\t\t\tlet indexIdInLocalStorage\n\n\t\t\t\tcheckedEmployeesNew.splice(indexCurrent, 1)\n\t\t\t\tcheckedEmployeesLocalStorage = JSON.parse(\n\t\t\t\t\tlocalStorage['checkedEmployees']\n\t\t\t\t)\n\n\t\t\t\tcheckedEmployeesLocalStorage.forEach((element, index) => {\n\t\t\t\t\tif (element.id === person.id) indexIdInLocalStorage = index\n\t\t\t\t})\n\t\t\t\tif (indexIdInLocalStorage >= 0) {\n\t\t\t\t\tcheckedEmployeesLocalStorage.splice(indexIdInLocalStorage, 1)\n\t\t\t\t\tlocalStorage['checkedEmployees'] = JSON.stringify(\n\t\t\t\t\t\tcheckedEmployeesLocalStorage\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SAVE_CHECKED_EMPLOYEES',\n\t\t\t\t\tpayload: checkedEmployeesNew,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}, [isChangeChecked])\n\n\tuseEffect(() => {\n\t\tif (!!localStorage['checkedEmployees']) {\n\t\t\tconst localStorageArr = JSON.parse(localStorage['checkedEmployees'])\n\t\t\tconst indexPerson = localStorageArr.find(\n\t\t\t\t(element, index) => element.id === person.id\n\t\t\t)\n\t\t\tif (!!indexPerson) {\n\t\t\t\tsetChecked(!isChecked)\n\t\t\t\tdispatch({ type: 'SAVE_CHECKED_EMPLOYEES', payload: localStorageArr })\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tlocalStorage.setItem('checkedEmployees', JSON.stringify([]))\n\t}, [])\n\n\treturn (\n\t\t<li className=\"employee__item\">\n\t\t\t<p className=\"employee__name\">\n\t\t\t\t{lastName} {firstName}\n\t\t\t</p>\n\t\t\t<input\n\t\t\t\tclassName=\"employee-checkbox\"\n\t\t\t\tonChange={() => handelClickOnCheckbox()}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={isChecked}\n\t\t\t/>\n\t\t\t{isChecked && (\n\t\t\t\t<span className=\"employee__checkbox-isChecked\">check box</span>\n\t\t\t)}\n\t\t</li>\n\t)\n}\n\nexport default CardLi\n","import React from 'react'\nimport CardLi from './CardLi'\n\nconst Card = ({ letter, item }) => {\n\tconst filterDataLetters = item.filter(\n\t\t(card) => card.lastName.split('')[0].toLowerCase() === letter\n\t)\n\n\tfilterDataLetters.sort((a, b) => (a['lastName'] > b['lastName'] ? 1 : -1))\n\n\tconst itemsNameEmploeers = filterDataLetters.map((person) => (\n\t\t<CardLi key={person.id} person={person} />\n\t))\n\n\treturn (\n\t\t<ul className=\"card__employees-list\">\n\t\t\t<h1 className=\"card__title\">{letter.toUpperCase()}</h1>\n\t\t\t{itemsNameEmploeers.length === 0 ? '-' : itemsNameEmploeers}\n\t\t</ul>\n\t)\n}\n\nexport default Card\n","export const monthArrInJS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\nexport const arrWord = [\n\t'a',\n\t'b',\n\t'c',\n\t'd',\n\t'e',\n\t'f',\n\t'g',\n\t'h',\n\t'i',\n\t'j',\n\t'k',\n\t'l',\n\t'm',\n\t'n',\n\t'o',\n\t'p',\n\t'q',\n\t'r',\n\t's',\n\t't',\n\t'u',\n\t'v',\n\t'w',\n\t'x',\n\t'y',\n\t'z',\n]\nexport const monthArr = [\n\t'January',\n\t'February',\n\t'March',\n\t'April',\n\t'May',\n\t'June',\n\t'July',\n\t'August',\n\t'September',\n\t'October',\n\t'November',\n\t'December',\n]\n","import React, { useEffect } from 'react'\nimport Card from './Card'\nimport { arrWord } from '../../utils/varibles'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst CardList = () => {\n\tconst dispatch = useDispatch()\n\tconst employees = useSelector((store) => store.allEmployees)\n\n\tconst arrCards = arrWord.map((element, index) => (\n\t\t<Card key={index} letter={element} item={employees} />\n\t))\n\n\tuseEffect(() => {\n\t\tfetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({ type: 'SAVE_ALL_EMPLOYEES', payload: data })\n\t\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"card__title\">Employees</h1>\n\t\t\t<div className=\"card__wrapper card__vertical-line\">{arrCards}</div>\n\t\t</div>\n\t)\n}\n\nexport default CardList\n","import React from 'react'\nimport { monthArr } from '../../utils/varibles'\n\nconst ChecedCardLi = ({ person }) => {\n\tconst { lastName, firstName, dob } = person\n\tconst dateBd = {\n\t\tmonth: new Date(dob).getMonth(),\n\t\tdate: new Date(dob).getDate(),\n\t\tyear: new Date(dob).getFullYear(),\n\t}\n\n\tdateBd.month = monthArr.find((el, index) => index === dateBd.month)\n\n\treturn (\n\t\t<li className=\"employee__item\">\n\t\t\t<p className=\"employee__name\">\n\t\t\t\t{lastName} {firstName}\n\t\t\t</p>\n\t\t\t<p className=\"employee__birthday\">\n\t\t\t\t{dateBd.date} {dateBd.month} {dateBd.year} year\n\t\t\t</p>\n\t\t</li>\n\t)\n}\n\nexport default ChecedCardLi\n","import React from 'react'\nimport ChecedCardLi from './ChecedCardLi'\nimport { monthArr } from '../../utils/varibles'\n\nconst CheckedCard = ({ month, item }) => {\n\tconst filterDataBirthday = item.filter((card) => {\n\t\tconst bd = new Date(card.dob)\n\t\treturn bd.getMonth() === month\n\t})\n\n\tconst itemsNameEmployees = filterDataBirthday.map((person) => (\n\t\t<ChecedCardLi key={person.id} person={person} />\n\t))\n\n\tconst currentMonth = monthArr.find((el, index) => index === month)\n\n\treturn (\n\t\t<>\n\t\t\t{itemsNameEmployees.length === 0 ? (\n\t\t\t\tfalse\n\t\t\t) : (\n\t\t\t\t<ul className=\"card__employees-list--checked\">\n\t\t\t\t\t<h1 className=\"card__title\">{currentMonth}</h1>\n\t\t\t\t\t{itemsNameEmployees}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default CheckedCard\n","import React from 'react'\nimport CheckedCard from './CheckedCard'\nimport { useSelector } from 'react-redux'\nimport { monthArrInJS } from '../../utils/varibles'\n\nconst CheckedCardList = () => {\n\tconst employeesChecked = useSelector((store) => store.checkedEmployees)\n\n\tconst arrCards = monthArrInJS.map((element, index) => (\n\t\t<CheckedCard key={index} month={element} item={employeesChecked} />\n\t))\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"card__title--birthday-part\">Employees birthday</h1>\n\t\t\t<div className=\"card__wrapper\">\n\t\t\t\t{employeesChecked.length === 0 ? <p>No selected employees</p> : arrCards}\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default CheckedCardList\n","import React from 'react'\nimport CardList from './components/CardEmployees/CardList'\nimport CheckedCardList from './components/CheckedCardEmployees/CheckedCardList'\nimport './style.scss'\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"wrapper\">\n\t\t\t<CardList />\n\t\t\t<CheckedCardList />\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nconst SAVE_ALL_EMPLOYEES = 'SAVE_ALL_EMPLOYEES'\nconst SAVE_CHECKED_EMPLOYEES = 'SAVE_CHECKED_EMPLOYEES'\n\nconst initialState = {\n\tallEmployees: [],\n\tcheckedEmployees: [],\n}\n\nconst reducer = (currentState = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SAVE_ALL_EMPLOYEES:\n\t\t\treturn { ...currentState, allEmployees: action.payload }\n\t\tcase SAVE_CHECKED_EMPLOYEES:\n\t\t\treturn { ...currentState, checkedEmployees: action.payload }\n\t\tdefault:\n\t\t\treturn currentState\n\t}\n}\n\nconst store = createStore(\n\treducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}